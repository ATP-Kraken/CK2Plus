####TRAIT GROUP TRIGGERS####
#If you make changes, update the "Trait group triggers CK2" spreadsheet

#Agreeable
#has_benevolent_trait_trigger		Has a benevolent trait.
#is_benevolent_trigger				Has a benevolent trait and not any evil traits.
#has_pleasant_trait_trigger			Has a pleasant personality trait.
#has_pleasant_personality_trigger	Has a pleasant personality trait and not any unpleasant personality traits.
#has_pious_trait_trigger			Has a piety trait.
#is_pious_trigger					Has a piety trait and not any impious traits.
#has_virtue_trigger					Has a virtue trait.

#Disagreeable
#has_evil_trait_trigger				Has an evil trait.
#is_evil_trigger					Has an evil trait and not any benevolent traits.
#has_unpleasant_trait_trigger		Has an unpleasant personality trait.
#has_unpleasant_personality_trigger	Has an  unpleasant personality trait and not any pleasant personality traits.
#has_impious_trait_trigger			Has an impious trait.
#is_impious_trigger					Has a impious trait and not any piety traits.
#has_vice_trigger					Has a vice trait.

#Attractiveness
#has_attractive_trait_trigger		Has a sex appeal trait.
#is_attractive_trigger				Has a sex appeal trait and not any traits with negative sex appeal.
#has_unattractive_trait_trigger		Has a negative sex appeal trait.
#is_unattractive_trigger			Has a negative sex appeal trait and not any traits with sex appeal.
#has_fair_trait_trigger				Is Fair/Groomed.
#has_ugly_trait_trigger				Is Ugly/Uncouth.

#Health/congential
#is_smart_trigger					Has a smart trait.
#is_dumb_trigger					Has a dumb trait.
#is_strong_trigger					Has a strong trait.
#is_weak_trigger					Has a weak trait.
#well_treated_for_disease_trigger   Has a modifier relating to a positive treatement.
#poorly_treated_for_disease_trigger Has a modifier relating to a negative treatement.
#character_disease_trigger			Has a disease trait.
#has_symptom_trigger				Has a symptom trait.
#has_injury_trigger					Has an injury trait.
#is_maimed_trigger					Has a maimed trait
#has_severe_disability_trigger		Has a severe disability, which makes the characters life really hard.
#has_medium_disability_trigger		Has a medium disability, which limits the character to some extent but they can mostly live a full life.
#has_minor_disability_trigger		Has a minor disability, which does not limit the character in a physical sense, but is a source of ridicule and trauma.
#has_disability_trigger				Has a severe or light disability.
#has_mental_disorder_trigger		Has a mental disorder trait.
#has_fertile_trait_trigger			Has a fertile trait.
#is_fertile_trigger					Has a fertile trait and not any infertile traits.
#has_infertile_trait_trigger		Has an infertile trait.
#is_infertile_trigger				Has an infertile trait and not any fertile traits, OR is celibate OR is eunuch.
#has_negative_congenital_trigger	Has a negative congenital trait

#Diplomacy
#has_education_diplomacy_trigger	Has a diplomacy education trait.
#has_lifestyle_diplomacy_trigger	Has a diplomacy lifestyle trait.
#child_personality_diplomacy_triggerHas a child trait with diplomacy bonus.

#Martial
#has_education_martial_trigger		Has a martial education trait.
#has_lifestyle_martial_trigger		Has a martial lifestyle trait.
#child_personality_martial_trigger	Has a child trait with martial bonus.

#Stewardship
#has_education_stewardship_trigger	Has a stewardship education trait.
#has_lifestyle_stewardship_trigger	Has a stewardship  lifestyle trait.
#child_personality_stewardship_trigger	Has a child trait with stewardship bonus.

#Intrigue
#has_education_intrigue_trigger		Has a intrigue education trait.
#has_lifestyle_intrigue_trigger		Has a intrigue lifestyle trait.
#child_personality_intrigue_trigger	Has a child trait with intrigue bonus.

#Learning
#has_education_learning_trigger		Has a learning education trait.
#has_lifestyle_learning_trigger		Has a learning lifestyle trait.
#child_personality_learning_trigger	Has a child trait with learning bonus.
#is_learned_trigger					Has a scholarly trait, learning-oriented trait.

#has_any_lifestyle_trait			Has any of the above lifestyle traits.

#Religion
#has_crusade_trait_trigger			Has a crusade type trait.
#has_secret_religion_trait_trigger	Has a secret religion trait.

#is_mongol_empire_leader_trigger	If the Character is a Mongol emperor or its liege is
#Used with character interaction to replace merc leader. DO NOT REMOVE

#Used with character interaction to swap council job. DO NOT REMOVE

is_inaccessible_trigger = {
	custom_tooltip = {
		text = is_inaccessible_tooltip

		OR = {
			has_character_flag = flag_holding_great_tribal_festival
			trait = in_hiding
			trait = on_hajj
			trait = on_pilgrimage
			trait = on_indian_pilgrimage
			trait = kow_tow_travels
			trait = travelling
			trait = troubled_pregnancy
			trait = pregnancy_finishing
			has_character_modifier = mother_minor_rest
			has_character_modifier = in_seclusion
			has_character_modifier = in_meditation
			has_character_modifier = doing_penance
			has_character_modifier = out_traveling
		}
	}
}

is_unimportant_trigger = {
	NOR = {
		is_married = yes
		is_landed = yes
		has_job_title = yes
		has_minor_title = yes

		AND = {
			is_lowborn = no
			num_of_dynasty_members >= 2
		}

		any_lover = { ai = no }
		any_close_relative = { ai = no }
		any_friend = { ai = no }
		any_rival = { ai = no }
		any_consort = { ai = no }

		num_of_claims >= 1
		has_character_flag = eternal_life_mystic
		AND = {
			trait = horse
			NOR = {
				has_alternate_start_parameter = { key = special_culture value = animal_kingdoms }
				has_alternate_start_parameter = { key = special_culture value = animal_world }
			}
		}
		has_character_modifier = in_seclusion
		has_character_modifier = elder_long_life_modifier
		immortal = yes
	}
}

sad_example_trigger = {
	age = 30
	is_married = no
	NOT = { num_of_children = 1 }
}

can_be_prophet_of_doom_trigger = {
	trait = zealous
	ai = yes
	is_adult = yes
	is_married = no
	is_landed = no

	OR = {
		trait = ambitious
		trait = misguided_warrior
		trait = elusive_shadow
		trait = lunatic
		trait = possessed
		trait = paranoid
		trait = stubborn
	}

	NOR = {
		trait = content
		trait = temperate
		is_close_relative = ROOT
	}
}

# Very usable! If poorly named
block_general_event_trigger = {
	OR = {
		is_adult = no
		is_incapable = yes
		prisoner = yes
		is_inaccessible_trigger = yes
		hidden_trigger = { is_alive = no }
	}
}

useless_character_trigger = {
	OR = {
		health < 2.5
		is_incapable = yes
		trait = lunatic
		trait = maimed
		trait = infirm
		trait = mangled
		trait = severely_injured
		trait = imbecile
		trait = inbred
	}
}

# TODO: Replace these with is_safe_religion = yes
FROMs_religion_is_playable_trigger = {
	FROM = { is_safe_religion = yes }
}

ROOTs_religion_is_playable_trigger = { #For targeted decision where FROM is the player
	ROOT = { is_safe_religion = yes }
}

ROOTs_secret_religion_is_playable_trigger = {
# To block players from getting a game over if they don't own all DLCs
	hidden_tooltip = {
		OR = {
			secret_religion_group  = christian
			AND = {
				secret_religion_group  = jewish_group
				has_dlc = "Sons of Abraham"
			}
			AND = {
				secret_religion_group  = muslim
				has_dlc = "The Sword of Islam"
			}
			AND = {
				secret_religion_group  = indian_group
				has_dlc = "Rajas of India"
			}
			AND = {
				OR = {
					secret_religion = taoist
					secret_religion = bon

					secret_religion = khurmazta
				}
				has_dlc = "Jade Dragon"

			}
			AND = {
				secret_religion_group = pagan_group
				OR = {
					has_dlc = "The Old Gods"
					has_dlc = "Holy Fury"
				}
			}
			AND = {
				secret_religion_group = zoroastrian_group
				has_dlc = "The Old Gods"
			}
		}
	}

	trigger_if = {
		limit = {
			secret_religion_group  = jewish_group
			NOT = { has_dlc = "Sons of Abraham" }
		}
		AND = {
			secret_religion_group  = jewish_group
			has_dlc = "Sons of Abraham"
		}
	}
	trigger_if = {
		limit = {
			secret_religion_group  = muslim
			NOT = { has_dlc = "The Sword of Islam" }
		}
		AND = {
			secret_religion_group  = muslim
			has_dlc = "The Sword of Islam"
		}
	}
	trigger_if = {
		limit = {
			secret_religion_group  = indian_group
			NOT = { has_dlc = "Rajas of India" }
		}
		AND = {
			secret_religion_group  = indian_group
				has_dlc = "Rajas of India"
		}
	}
	trigger_if = {
		limit = {
			OR = {
				secret_religion = taoist
				secret_religion = bon

				secret_religion = khurmazta

			}
			NOT = { has_dlc = "Jade Dragon" }
		}
		AND = {
			OR = {
				secret_religion = taoist
				secret_religion = bon
				#reformed bön prints out as 'bön' and there's no need to display 'bön' twice in the tooltip
				secret_religion = khurmazta
			}
			has_dlc = "Jade Dragon"
		}
	}
	trigger_if = {
		limit = {
			secret_religion_group  = pagan_group
			NOR = {
				has_dlc = "The Old Gods"
				has_dlc = "Holy Fury"
			}
		}
		AND = {
			secret_religion_group = pagan_group
			OR = {
				has_dlc = "The Old Gods"
				has_dlc = "Holy Fury"
			}
		}
	}
	trigger_if = {
		limit = {
			secret_religion_group  = pagan_group
			NOT = { has_dlc = "The Old Gods" }
		}
		AND = {
			secret_religion_group = zoroastrian_group
			has_dlc = "The Old Gods"
		}
	}
}

interesting_face_trigger = {
	OR = {
		is_ill = yes
		has_scarred_trait_trigger = yes
		is_strong_trigger = yes
		is_weak_trigger = yes
		trait = fair
		trait = groomed
		trait = ugly
		trait = uncouth
		trait = disfigured
		trait = blinded
		trait = one_eyed
		trait = leper
		trait = harelip
		trait = lunatic
		trait = possessed
		trait = rabies
		trait = horse
	}
}

is_rich_holding = {
	OR = {
		has_building = ct_marketplace_3
		has_building = ct_marketplace_4
		has_building = ct_marketplace_5
		has_building = ct_marketplace_6

		calc_true_if = {
			amount >= 2

			has_building = ca_keep_3
			has_building = ca_keep_4
			has_building = ca_keep_5
			has_building = ca_keep_6
			has_building = ca_town_3
			has_building = ca_town_4
			has_building = ca_town_5
			has_building = ca_town_6
			has_building = tp_monastery_3
			has_building = tp_monastery_4
			has_building = tp_monastery_5
			has_building = tp_monastery_6
			has_building = tp_town_3
			has_building = tp_town_4
			has_building = tp_town_5
			has_building = tp_town_6
		}
	}
}

is_richer_holding = {
	OR = {
		has_building = ct_marketplace_5
		has_building = ct_marketplace_6

		calc_true_if = {
			amount >= 2

			has_building = ca_keep_5
			has_building = ca_keep_6
			has_building = ca_town_5
			has_building = ca_town_6
			has_building = tp_monastery_5
			has_building = tp_monastery_6
			has_building = tp_town_5
			has_building = tp_town_6
		}
	}
}

is_ascetic_trigger = {
	custom_tooltip = {
		text = is_ascetic_tooltip

		OR = {
			trait = monk
			trait = nun
			trait = muni
			trait = aryika
			trait = bhikkhu
			trait = bhikkhuni
			trait = sanyasi
			trait = sanyasini
			trait = desert_father
			trait = desert_mother
			trait = perfecti
		}
	}
}

is_virgin_trigger = {
	OR = {
		age < 25
		trait = celibate
		trait = chaste
		trait = shy
		is_ascetic_trigger = yes
	}

	has_children = no
	has_lover = no
	is_pregnant = no

	NOR = {
		any_spouse_even_if_dead = { always = yes }
		has_focus = focus_seduction
		trait = pregnant
		trait = lustful
		trait = hedonist
		trait = seducer
		trait = seductress
		trait = lovers_pox
		trait = has_aztec_disease
		trait = syphilitic
	}
}

print_scope_trigger = {
	log = "------------------------------"
	log = "- Printing the current scope -"
	log = "- This: [This.GetName][This.GetBestName]"
	log = "- Root: [Root.GetName][Root.GetBestName]"
	log = "- Prev: [Prev.GetName][Prev.GetBestName]"
	log = "- PrevPrev: [PrevPrev.GetName][PrevPrev.GetBestName]"
	log = "- PrevPrevPrev: [PrevPrevPrev.GetName][PrevPrevPrev.GetBestName]"
	log = "- PrevPrevPrevPrev: [PrevPrevPrevPrev.GetName][PrevPrevPrevPrev.GetBestName]"
	log = "- From: [From.GetName][From.GetBestName]"
	log = "- FromFrom: [FromFrom.GetName][FromFrom.GetBestName]"
	log = "- FromFromFrom: [FromFromFrom.GetName][FromFromFrom.GetBestName]"
	log = "- FromFromFromFrom: [FromFromFromFrom.GetName][FromFromFromFrom.GetBestName]"
	log = "- Event_target:test_target1: [test_target1.GetName][test_target1.GetBestName]"
	log = "- Event_target:test_target2: [test_target2.GetName][test_target2.GetBestName]"
	log = "- Event_target:test_target3: [test_target3.GetName][test_target3.GetBestName]"
	log = "------------------------------"
}

is_german_secret_religious_society_member_trigger = {
	has_secret_religion = yes
	OR = {
		secret_religion = german_pagan_reformed
		secret_religion = german_pagan
	}
}

is_celtic_secret_religious_society_member_trigger = {
	has_secret_religion = yes
	OR = {
		secret_religion = celtic_pagan_reformed
		secret_religion = celtic_pagan
	}
}

is_tibetan_pagan_secret_religious_society_member_trigger = {
	has_secret_religion = yes
	secret_religion = tibetan_pagan
}

is_khurmazta_secret_religious_society_member_trigger = {
	secret_religion = khurmazta
}

is_egyptian_secret_religious_society_member_trigger = {
	has_secret_religion = yes
	OR = {
		secret_religion = egyptian_pagan
		secret_religion = aten_pagan
	}
}

is_arab_secret_religious_society_member_trigger = {
	has_secret_religion = yes
	secret_religion = arab_pagan
}

is_berber_secret_religious_society_member_trigger = {
	has_secret_religion = yes
	secret_religion = berber_pagan
}

is_jewish_pagan_secret_religious_society_member_trigger = {
	has_secret_religion = yes
	secret_religion = jewish_pagan
}

is_visible_to_self_trigger = { #For hidden modifiers
	custom_tooltip = {
		text =  is_visible_to_self_trigger_tooltip
		character = FROM
	}
}

has_cult_of_balor_prerequisites = {
	has_common_devilworship_prerequisites = yes
	OR = {
		religion = celtic_pagan
		religion = celtic_pagan_reformed
		secret_religion = celtic_pagan
		secret_religion = celtic_pagan_reformed
	}
}

has_cult_of_angra_mainyu_prerequisites = {
	has_common_devilworship_prerequisites = yes
	OR = {
		AND = {
			religion_group = zoroastrian_group
			NOT = { religion = yazidi }
		}
		secret_religion_group = zoroastrian_group
	}
}

has_jinn_sorceror_prerequisites = {
	has_common_devilworship_prerequisites = yes
	OR = {
		religion_group = muslim
		religion = arab_pagan
		secret_religion_group = muslim
		secret_religion = arab_pagan
	}
}

has_cult_of_titan_prerequisites = {
	has_common_devilworship_prerequisites = yes
	OR = {
		religion_group = hellenic_pagan_group
		secret_religion_group = hellenic_pagan_group
	}
}

has_cult_of_apep_prerequisites = {
	has_common_devilworship_prerequisites = yes
	OR = {
		religion = egyptian_pagan
		secret_religion = egyptian_pagan
	}
}

can_be_asked_to_leave_court_trigger = {
	NOR = {
		custom_tooltip = { #To avoid double negation
			text = is_a_child_tt
			is_adult = no
		}
		prisoner = yes
		trait = incapable
		is_ruler = yes
		has_job_title = yes
		#custom tooltip for minor titles
		custom_tooltip = {
			text = is_regent_commander_or_physician_tt
			OR = {
				has_minor_title = title_regent
				has_minor_title = title_appointed_regent
				has_minor_title = title_commander
				has_minor_title = title_court_physician
			}
		}
		custom_tooltip = {
			text = is_spouse_consort_or_of_your_dynasty
			OR = {
				is_married = FROM
				is_consort = FROM
				is_close_relative = FROM
				sibling = FROM
			}
		}

		is_primary_heir = yes

		#trigger_if has Reaper's Due
		trigger_if = {
			limit = { has_dlc = "Reapers"}
			in_seclusion = yes
		}
		custom_tooltip = {
			text = is_inaccessible_tt
			OR = {
				has_character_flag = flag_holding_great_tribal_festival
				trait = in_hiding
				trait = on_hajj
				trait = on_pilgrimage
				trait = on_indian_pilgrimage
				trait = kow_tow_travels
				trait = travelling
				trait = troubled_pregnancy
				trait = pregnancy_finishing
				has_character_modifier = mother_minor_rest
				has_character_modifier = in_meditation
				has_character_modifier = doing_penance
				has_character_modifier = out_traveling
			}
		}
		#Special circumstances
		custom_tooltip = {
			text = is_character_in_important_chain_of_events_tt
			has_character_flag = eternal_life_mystic
			has_character_flag = immortal_rival
			has_character_flag = flag_special_event_character
			has_character_flag = is_death
			is_immune_to_pruning = yes
			historical = yes
		}

		trigger_if = {
			limit = {
				trait = horse
			}
			trait = horse
		}
	}
}

is_born_in_january_trigger = {
	month_of_birth == 1
}

is_born_in_february_trigger = {
	month_of_birth == 2
}

is_born_in_march_trigger = {
	month_of_birth == 3
}

is_born_in_april_trigger = {
	month_of_birth == 4
}

is_born_in_may_trigger = {
	month_of_birth == 5
}

is_born_in_june_trigger = {
	month_of_birth == 6
}

is_born_in_july_trigger = {
	month_of_birth == 7
}

is_born_in_august_trigger = {
	month_of_birth == 8
}

is_born_in_september_trigger = {
	month_of_birth == 9
}

is_born_in_october_trigger = {
	month_of_birth == 10
}

is_born_in_november_trigger = {
	month_of_birth == 11
}

is_born_in_december_trigger = {
	month_of_birth == 12
}

has_unsafe_secret_religion = {
	NOT = { is_nomadic = yes }
	OR = {
		AND = {
			NOT = { has_dlc = "The Sword of Islam" }
			OR = {
				secret_religion_group = muslim
				secret_religion = yazidi
			}
		}
		AND = {
			NOT = { has_dlc = "Sons of Abraham" }
			secret_religion_group = jewish_group
		}
		AND = {
			NOT = { has_dlc = "The Old Gods" }
			OR = {
				secret_is_pagan_religion = yes
				secret_religion_group = zoroastrian_group
				secret_religion = aztec
			}
		}
		AND = {
			NOT = { has_dlc = "Rajas of India" }
			secret_religion_group = indian_group
		}
		AND = {
			NOT = { has_dlc = "Jade Dragon" }
			secret_religion = taoist
		}
	}
}

is_any_kinslayer_trigger = {
	OR = {
		trait = kinslayer
		trait = familial_kinslayer
		trait = dynastic_kinslayer
		trait = tribal_kinslayer
	}
}

has_unsafe_religion = {
	NOT = { is_nomadic = yes }
	OR = {
		AND = {
			NOT = { has_dlc = "The Sword of Islam" }
			OR = {
				religion_group = muslim
				religion = yazidi
			}
		}
		AND = {
			NOT = { has_dlc = "Sons of Abraham" }
			secret_religion_group = jewish_group
		}
		AND = {
			NOT = { has_dlc = "The Old Gods" }
			OR = {
				is_pagan_religion = yes
				religion_group = zoroastrian_group
				religion = aztec
			}
		}
		AND = {
			NOT = { has_dlc = "Rajas of India" }
			religion_group = indian_group
		}
		AND = {
			NOT = { has_dlc = "Jade Dragon" }
			religion = taoist
		}
	}
}

using_unimportant_cb = {
	OR = {
		using_cb = peasant_revolt
		using_cb = heretic_revolt
		using_cb = religious_revolt
		using_cb = liberation_revolt
	}
}

proselytize_convert_independent_trigger = {
	owner = {
		independent = yes
		religion_group = pagan_group
		is_within_diplo_range = FROM

		NOR = {
			religion = FROM
			controls_religion = yes
			is_reformed_religion = yes
		}

		capital_scope = {
			province = ROOT
		}

		FROM = {
			higher_tier_than = COUNT

			trigger_if = {
				limit = { independent = no }
				higher_tier_than = DUKE
			}

			trigger_if = {
				limit = { religion_group = pagan_group }
				has_religion_feature = religion_proselytizing
			}
		}

		NOT = {
			has_opinion_modifier = {
				who = FROM
				modifier = opinion_sent_preacher
			}
		}

		trigger_if = {
			limit = { religion = aztec }
			year >= 1350
		}
	}
}

is_toddler_age_trigger = {
	age >= 0
 	age < 4
}

is_young_child_age_trigger = {
	age >= 4
 	age < 9
}

is_child_age_trigger = {
	age >= 9
	age < 12
}

is_adolescent_age_trigger = {
	age >= 12
 	age < 17
}

is_teenager_age_trigger = {
	age >= 13
 	age < 20
}

is_grown_up_age_trigger = {
	age >= 20
}

is_middle_aged_trigger = {
	age >= 40
	age < 65
}

is_senior_age_trigger = {
	age >= 50
}

is_elder_age_trigger = {
	age >= 70
}

#for MNM.9000 chain
the_hunt_for_an_artifact_has_made_enough_progress_trigger = {
	event_target:relic_ruler = {
		trigger_if = {
			limit = { has_character_modifier = relic_rumor_minor }

			check_variable = {
				which = relic_score
				value >= 8
			}
		}
		trigger_else_if = {
			limit = { has_character_modifier = relic_rumor_medium  }

			check_variable = {
				which = relic_score
				value >= 14
			}
		}
		trigger_else = {
			has_character_modifier = relic_rumor_major

			check_variable = {
				which = relic_score
				value >= 20
			}
		}
	}
}

has_tribal_or_nomadic_government_trigger = {
	custom_tooltip = {
		text = tribal_or_nomadic_government_tt

		OR = {
			government = tribal_government
			government = nomadic_government
		}
	}
}

has_minor_title_relating_to_martial_trigger = { #WIP - feel free to add to this
	OR = {
		has_minor_title = title_master_of_the_horse
		has_minor_title = title_cupbearer
		has_minor_title = title_commander
	}
}

has_fat_for_flag_trigger = {
	OR = {
		has_character_flag = flag_fat_for_gluttony
		has_character_flag = flag_fat_for_stress
		has_character_flag = flag_fat_for_depression
		has_character_flag = flag_fat_for_sloth
		has_character_flag = flag_fat_for_hedonism
		has_character_flag = flag_fat_for_carousing
		has_character_flag = flag_fat_for_family
		has_character_flag = flag_fat_for_content
		has_character_flag = flag_fat_for_lust
		has_character_flag = flag_fat_for_wroth
		has_character_flag = flag_fat_for_drunkard
		has_character_flag = flag_fat_for_boredom #fallback reason
	}
}

has_malnourished_for_flag_trigger = {
	OR = {
		has_character_flag = flag_malnourished_for_temperance
		has_character_flag = flag_malnourished_for_stress
		has_character_flag = flag_malnourished_for_depression
		has_character_flag = flag_malnourished_for_sloth
		has_character_flag = flag_malnourished_for_study
		has_character_flag = flag_malnourished_for_faith
		has_character_flag = flag_malnourished_for_paranoia
		has_character_flag = flag_malnourished_for_diligence
		has_character_flag = flag_malnourished_for_cannibal
		has_character_flag = flag_malnourished_for_craven
		has_character_flag = flag_malnourished_for_boredom #fallback reason
	}
}

ruler_has_dedicated_temple_trigger = {
	OR = {
		has_character_modifier = dedicated_to_zeus
		has_character_modifier = dedicated_to_poseidon
		has_character_modifier = dedicated_to_hades
		has_character_modifier = dedicated_to_hermes
		has_character_modifier = dedicated_to_demeter
		has_character_modifier = dedicated_to_athena
		has_character_modifier = dedicated_to_apollo
		has_character_modifier = dedicated_to_arthemis
		has_character_modifier = dedicated_to_ares
		has_character_modifier = dedicated_to_aphrodite
		has_character_modifier = dedicated_to_ephaestus
		has_character_modifier = dedicated_to_hestia
	}
}

is_inaccessible_or_incapable_trigger = {
	OR = {
		is_inaccessible_trigger = yes
		trait = incapable
		prisoner = yes
	}
}

# Not really about culture - Used in AI voting logic
this_is_warrior_culture_trigger = {
	pacifist = no

	OR = {
		religion_group = muslim
		religion = norse_pagan
		religion = tengri_pagan
		religion = aztec
		has_religion_feature = religion_warlike
		is_tribal = yes
		is_nomadic = yes

		trigger_if = {
			limit = {
				OR = {
					religion = norse_pagan_reformed
					religion = tengri_pagan_reformed
					religion = aztec_reformed
				}
			}

			NOT = { has_dlc = "Holy Fury" }
		}
	}
}

# Not really about culture - Used in AI voting logic
this_is_diplomatic_culture_trigger = {
	OR = {
		is_feudal = yes
		is_patrician = yes
		is_merchant_republic = yes
	}

	OR = {
		religion_group = christian
		religion_group = jewish_group
		religion_group = zoroastrian_group
		religion = hellenic_pagan
		has_religion_feature = religion_cosmopolitan

		trigger_if = {
			limit = { religion = hellenic_pagan_reformed }

			NOT = { has_dlc = "Holy Fury" }
		}
	}
}

# Not really about culture - Used in AI voting logic
this_is_spiritual_culture_trigger = {
	OR = {
		religion_group = indian_group
		religion = bon
		has_religion_feature = religion_peaceful

		trigger_if = {
			limit = { religion = bon_reformed }

			NOT = { has_dlc = "Holy Fury" }
		}
	}
}

# Used in succession voting to decide valid candidates
parent_for_elective_succession_trigger = {
	OR = {
		has_claim = ROOT_FROMFROM

		trigger_if = {
			limit = { is_close_relative = ROOT }

			OR = {
				dynasty = ROOT

				AND = {
					is_landed = yes
					higher_real_tier_than = BARON
				}
			}
		}

		trigger_if = {
			limit = { higher_real_tier_than = COUNT }

			# Either defacto direct vassal, or independent ruler who is dejure vassal
			OR = {
				vassal_of = ROOT

				AND = {
					independent = yes

			 		any_dejure_liege = {
						title = FROMFROM
					}
				}
			}
		}
	}

	# Candidate should not be a landless Courtier who is about to inherit a Theocracy or Republic
	OR = {
		AND = {
			is_ruler = yes
			is_landed = yes
			is_republic = no
			is_merchant_republic = no
			is_theocracy = no
		}

		NOT = {
			any_heir_title = {
				OR = {
					is_republic = yes
					is_merchant_republic = yes
					is_theocracy = yes
				}
			}
		}
	}

	# If the title controls the religion, candidates must be of the same religion
	trigger_if = {
		limit = { ROOT = { controls_religion = yes } }
		religion = ROOT
	}

	NOR = {
		character = ROOT # Not the current ruler
		is_ascetic_trigger = yes
		is_theocracy = yes
		is_republic = yes
		is_merchant_republic = yes
		trait = disinherited
		trait = eunuch
		trait = bastard
		trait = cat
		trait = horse
	}
}

dlc_religion_check_trigger = {
	OR = {
		religion_group = christian
		AND = {
			religion_group = muslim
			has_dlc = "The Sword of Islam"
		}
		AND = {
			religion_group = jewish_group
			has_dlc = "Sons of Abraham"
		}
		AND = {
			religion_group = pagan_group
			OR = {
				has_dlc = "The Old Gods"
				has_dlc = "Holy Fury"
			}
		}
		AND = {
			religion = bon
			has_dlc = "Jade Dragon"
		}
		AND = {
			religion_group = zoroastrian_group
			has_dlc = "The Old Gods"
		}
		AND = {
			religion = khurmazta
			has_dlc = "Jade Dragon"
		}
		AND = {
			religion_group = indian_group
			has_dlc = "Rajas of India"
		}
		AND = {
			religion = taoist
			has_dlc = "Jade Dragon"
		}
	}
}

reconquista_check_trigger = {
	any_war = {
		OR = {
			using_cb = reconquista_cb
			using_cb = reconquista_leon
			using_cb = reconquista_castille
			using_cb = reconquista_aragon
			using_cb = reconquista_galicia
			using_cb = reconquista_beja
			using_cb = reconquista_granada
			using_cb = reconquista_cordoba
			using_cb = reconquista_valencia
			using_cb = reconquista_navarra
			using_cb = reconquista_balearic
		}
	}
}

not_reconquista_check_trigger = {
	NOT = {
		any_war = {
			OR = {
				using_cb = reconquista_cb
				using_cb = reconquista_leon
				using_cb = reconquista_castille
				using_cb = reconquista_aragon
				using_cb = reconquista_galicia
				using_cb = reconquista_beja
				using_cb = reconquista_granada
				using_cb = reconquista_cordoba
				using_cb = reconquista_valencia
				using_cb = reconquista_navarra
				using_cb = reconquista_balearic
			}
		}
	}
}

region_africa_west_central_or_east_trigger = {
	OR = {
		region = world_africa_west
		region = world_africa_east
		region = world_africa_central
	}
}

varangian_guard_events_default_trigger = {
	has_dlc = "The Old Gods"
	has_character_flag = serving_varangian
	culture_group = north_germanic
	ai = yes
	is_adult = yes
	is_incapable = no
	prisoner = no
}

is_mongol_empire_leader_trigger = {
	OR = {
		has_landed_title = e_il-khanate
		has_landed_title = e_golden_horde
		has_landed_title = e_chagatai
		has_landed_title = e_mongol_empire
		any_liege = { has_landed_title = e_il-khanate }
		any_liege = { has_landed_title = e_golden_horde }
		any_liege = { has_landed_title = e_chagatai }
		any_liege = { has_landed_title = e_mongol_empire }
	}
}

is_single_player_observer_mode = {
	AND = {
		multiplayer = no
		is_local_human_observer = yes
	}
}

