namespace = maintPlus

#######################################
#
# CK2Plus Maintenance Events
#
#######################################
#
# CATALOG
#
# 001 - 009: Maintenence Pulses
# 010 - 019: Startup Events
# 020 - 029: Yearly Events
# 030 - 039: Succession Events
# 040 - 099: TBD
# 109 - 999: TBD
#
#######################################

#######################################
#
# 001 - 009: Maintenence Pulses
#
#######################################
#
# INDEX
#
# 001: Startup
# 002: Yearly
# 003: Succession
#
#######################################

# 001: Startup
character_event = {
	id = maintPlus.001

	hide_window = yes
	is_triggered_only = yes

	only_rulers = yes
	religion = misphysite

	trigger = {
		has_landed_title = d_miaphysite
	}

	immediate = {
		# First Time setup
		if = {
			limit = {
				e_placeholder = { NOT = { has_title_flag = startup } }
			}
			e_placeholder = { set_title_flag = startup }
			# Trigger relevant events
			character_event = { id = emf_nomad.1000 } # emf_nomad.1000: Antinomad setup
			character_event = { id = maintPlus.010 } # schismPlus.001: Pre-schism setup
			character_event = { id = maintPlus.010 } # 010: Title setup
			character_event = { id = maintPlus.011 } # 011: Crown setup
			any_character = { # Genetics and Claims check
				limit = { NOT = { has_character_flag = start_of_game_character } }
				character_event = { id = geneticPlus.001 } # geneticPlus.001: Congenital Traits Control
				character_event = { id = maintPlus.100 } # 100: Remove undesireable claims
				character_event = { id = maintPlus.101 } # 101: Indian Caste Fix
				character_event = { id = maintPlus.102 } # 102: Add Cousin Opinions
				# Remove colognian culture
				# NOTE: verify need for this. It appears suspicious
				#if = {
				#	limit = { culture = colognian }
				#	if = {
				#		limit = { liege = { NOT = { culture = colognian } german_cultures_trigger = yes } }
				#		liege = { reverse_culture = PREV }
				#	} else = {
				#		location = {
				#			reverse_culture = PREV
				#		}
				#	}
				#}
				set_character_flag = start_of_game_character
			}
			character_event = { id = maintPlus.012 } # 012: Ruler Designer setup
			if = {
				limit = { is_ironman = yes }
				any_player = { id = maintPlus.013 } # 013: Ironman Warning
			}
			else = {
				any_player = { id = maintPlus.014 } # 014: Player greeting
			}
			# Game starts for real:
			character_event = { id = SSI.73 days = 1 } # SSI.73: Check for playable aztec invasion
		}
	}
}

# 002: Yearly
#character_event = {
#	id = maintPlus.002
#
#	hide_window = yes
#	is_triggered_only = yes
#
#	only_rulers = yes
#	religion = miaphysite
#
#	trigger = {
#		has_landed_title = d_miaphysite
#	}
#}

# 003: Succession
#character_event = {
#	id = maintPlus.003
#
#	hide_window = yes
#	is_triggered_only = yes
#}

#######################################
#
# 010 - 019: Startup Events
#
#######################################
#
# INDEX
#
# 010: Title setup
# 011: Crown setup
# 012: Ruler Designer setup
# 013: Ironman Warning
# 014: Player greeting
#
#######################################

# 010: Title setup
character_event = {
	id = maintPlus.010

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# set appropriate demesne laws level
		any_title = {
			limit = {
				temporary = no
				has_holder = yes
				is_primary_holder_title = yes
				holder_scope = {
					is_offmap_trigger = no
					is_landed = yes
					higher_tier_than = BARON
				}
			}
			if = {
				limit = {
					holder_scope = {
						capital_scope = { TECH_LEGALISM < 2 }
					}
					NOT = { has_law = demesne_laws_0 }
				}
				add_law = demesne_laws_0
			}
			else_if = {
				limit = {
					holder_scope = {
						capital_scope = {
							TECH_LEGALISM >= 2
							TECH_LEGALISM < 4
						}
					}
					NOT = { has_law = demesne_laws_1 }
				}
				add_law = demesne_laws_1
			}
			else_if = {
				limit = {
					holder_scope = {
						capital_scope = {
							TECH_LEGALISM >= 4
							TECH_LEGALISM < 6
						}
					}
					NOT = { has_law = demesne_laws_2 }
				}
				add_law = demesne_laws_2
			}
			else_if = {
				limit = {
					holder_scope = {
						capital_scope = {
							TECH_LEGALISM >= 6
							TECH_LEGALISM < 8
						}
					}
					NOT = { has_law = demesne_laws_3 }
				}
				add_law = demesne_laws_3
			}
			else_if = {
				limit = {
					holder_scope = {
						capital_scope = {
							TECH_LEGALISM >= 8
						}
					}
					NOT = { has_law = demesne_laws_4 }
				}
				add_law = demesne_laws_4
			}
		}

		# mark titles that start at CA 0 and should not be destroyed if reduced
		any_title = {
			limit = {
				has_holder = yes
				higher_tier_than = DUKE
				has_law = crown_authority_0
				NOT = { has_title_flag = do_not_destroy }
			}
			set_title_flag = do_not_destroy
		}

		# double-check governments in imperial realms
		# NOTE: Is likely redundant with triggers within the governments files. May no longer be necessary. Please verify
		# Make empires with imperial administration be imperial government
		any_independent_ruler = {
			limit = {
				is_feudal = yes
				has_imperial_government_trigger = no
				primary_title = {
					tier = EMPEROR
					has_law = imperial_administration
					has_title_flag = has_imperial_administration
				}
			}
			switch_to_imperial_effect = yes
		}
		# In case character happens to have two imperial titles (which can happen for 30 days.)
		any_independent_ruler = {
			limit = {
				is_ruler = yes
				independent = yes
				has_imperial_government_trigger = yes
				NOT = {
					primary_title = {
						tier = EMPEROR
						has_law = imperial_administration
						has_title_flag = has_imperial_administration
					}
				}
				primary_title = {
					owner = {
						NOT = {
							any_realm_title = {
								tier = EMPEROR
								has_law = imperial_administration
								NOT = { title = PREVPREV}
							}
						}
					}
				}
			}
			switch_to_feudal_effect = yes
		}
		any_independent_ruler = {
			any_realm_lord = {
				limit = {
					is_ruler = yes
					independent = no
					has_imperial_government_trigger = yes
					NOT = { top_liege = { has_imperial_government_trigger = yes } }
				}
				switch_to_feudal_effect = yes
			}
		}
		any_independent_ruler = {
			any_realm_lord = {
				limit = {
					is_ruler = yes
					independent = no
					is_feudal = yes
					is_patrician = no
					top_liege = { has_imperial_government_trigger = yes }
				}
				if = {
					limit = {
						has_imperial_government_trigger = no
					}
					switch_to_imperial_effect = yes
				}
			}
		}

		# Set up Imperial Decadence
		any_independent_ruler = {
			limit = {
				real_tier = EMPEROR
				is_offmap_trigger = no
				is_nomadic = no
				NOT = { uses_decadence = yes }
				NOT = { has_landed_title = e_byzantium }
			}
			character_event = { id = Plus.1852 days = 1 }
		}
		e_byzantium = { # fire appropriate startup event for Byzantium (NOTE: please check this for correct functionality)
			holder_scope = {
				narrative_event = { id = Plus.1300 }
				narrative_event = { id = Plus.1301 }
				narrative_event = { id = Plus.1302 }
				narrative_event = { id = Plus.1303 }
			}
		}
	}
}

# 011: Crown setup
character_event = {
	id = maintPlus.011

	hide_window = yes
	is_triggered_only = yes

	immediate = {
		# give crowned trait to all existing kings and emperors
		any_independent_ruler = {
			limit = {
				is_offmap_trigger = no
				is_playable = yes
				higher_real_tier_than = DUKE
				is_adult = yes
				is_feudal = yes
				has_horde_culture = no
				is_nomadic = no
				primary_title = { is_vice_royalty = no }
				independent = yes
				NOR = {
					trait = crowned
					trait = crowned_by_relhead
					trait = crowned_by_vip
					trait = uncrowned
					has_landed_title = e_hre
					has_landed_title = e_karling
					has_landed_title = e_byzantium
				}
			}
			add_trait = crowned
		}

		# give uncrowned trait to everyone else
		any_independent_ruler = {
			limit = {
				is_offmap_trigger = no
				is_playable = yes
				higher_real_tier_than = DUKE
				is_feudal = yes
				has_horde_culture = no
				is_nomadic = no
				independent = yes
				primary_title = { is_vice_royalty = no }
				NOR = {
					trait = crowned
					trait = uncrowned
					trait = crowned_by_relhead
					trait = crowned_by_vip
					trait = crowned_by_pope
					trait = strong_basileus
					trait = weak_basileus
					trait = crowned_by_priest
					trait = crowned_by_bishop
					trait = crowned_by_myself
					trait = crowned_by_pope_stolen
				}
			}
			add_trait = uncrowned
		}
	}
}

# 012: Ruler Designer setup

# 013: Ironman Warning

# 014: Player greeting


#######################################
#
# 020 - 029: Yearly Pulse Events
#
#######################################
#
# INDEX
#
#######################################



#######################################
#
# 100 - 199: Utility Fixes
#
#######################################
#
# INDEX
#
# 100: Remove undesireable claims
# 101: Indian Caste Fix
# 102: Add Cousin Opinions
#
#######################################

# 100: Remove undesireable claims
character_event = {
	id = maintPlus.100

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		any_claim = {
			limit = {
				has_holder = no
				controls_religion = no
			}
			remove_claim = ROOT
		}
		if = {
			limit = {
				is_female = yes
				is_ruler = no
			}
			any_claim = {
				limit = {
					has_law = agnatic_succession
					OR = {
						is_tribal = yes
						is_nomadic = yes
					}
				}
				remove_claim = ROOT
			}
		}
	}
}

# 101: Indian Caste Fix
character_event = {
	id = maintPlus.101

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		religion_group = indian_group
		NOR = {
			religion = bon
			religion = taoist
			trait = brahmin
			trait = kshatriya
			trait = vaishya
		}
	}

	immediate = {
		if = {
			limit = {
				is_feudal = yes
			}
			add_trait = kshatriya
		}
		else_if = {
			limit = {
				is_feudal = no
				OR = {
					is_theocracy = yes
					is_priest = yes
				}
			}
			add_trait = brahmin
		}
		else = {
			add_trait = vaishya
		}
	}
}

# 102: Add Cousin Opinions
character_event = {
	id = maintPlus.102

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			mother_even_if_dead = {
				any_sibling_even_if_dead = {
					any_child = {
						NOT = { has_opinion_modifier = { who = ROOT modifier = opinion_cousin } }
					}
				}
			}
			father_even_if_dead = {
				any_sibling_even_if_dead = {
					any_child = {
						NOT = { has_opinion_modifier = { who = ROOT modifier = opinion_cousin } }
					}
				}
			}
		}
	}

	immediate = {
		mother_even_if_dead = {
			any_sibling_even_if_dead = {
				any_child = {
					limit = { NOT = { has_opinion_modifier = { who = ROOT modifier = opinion_cousin } } }
					reverse_opinion = { who = ROOT modifier = opinion_cousin years = 100 }
					opinion = { who = ROOT modifier = opinion_cousin years = 100 }
				}
			}
		}
		father_even_if_dead = {
			any_sibling_even_if_dead = {
				any_child = {
					limit = { NOT = { has_opinion_modifier = { who = ROOT modifier = opinion_cousin } } }
					reverse_opinion = { who = ROOT modifier = opinion_cousin years = 100 }
					opinion = { who = ROOT modifier = opinion_cousin years = 100 }
				}
			}
		}
	}
}
