namespace = geneticPlus

#######################################
#
# CK2Plus Genetics Events
#
#######################################
#
# CATALOG
#
# 001 - 009: Setup Chain
# 010 - 019: Maintenance
#
#######################################

#######################################
#
# 001 - 009: Setup Chain
#
#######################################
#
# INDEX
#
# 001: Congenital Traits Control
# 002: Intelligence Check
# 003: Strength Check
# 004: Appearance Check
# 005: Fertility Check
# 006: Height Check
# 007: Masking Modifiers
# 008: Divine Blood Check
# 009: Yehudi Check
#
#######################################

# 001: Congenital Traits Control
character_event = {
	id = geneticPlus.001

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		character_event = { id = geneticPlus.002 } # 002: Intelligence Check
		character_event = { id = geneticPlus.003 } # 003: Strength Check
		character_event = { id = geneticPlus.004 } # 004: Appearance Check
		character_event = { id = geneticPlus.005 } # 005: Fertility Check
		character_event = { id = geneticPlus.006 } # 006: Height Check
		character_event = { id = geneticPlus.007 } # 007: Masking Modifiers
		character_event = { id = geneticPlus.008 } # 008: Divine Blood Check
		character_event = { id = geneticPlus.009 } # 009: Yehudi Check
		# Chance of random congenital trait
		if = {
			limit = {
				NOT = { is_secret_congenital_trait_trigger = yes }
			}
			generate_potential_congenital_trait = yes
		}
	}
}

# 002: Intelligence Check
character_event = {
	id = geneticPlus.002

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		NOR = {
			trait = genius
			trait = quick
			trait = slow
			trait = imbecile
		}
		OR = {
			mother_even_if_dead = { trait = genius }
			mother_even_if_dead = { trait = quick }
			mother_even_if_dead = { trait = slow }
			mother_even_if_dead = { trait = imbecile }
			real_father_even_if_dead = { trait = genius }
			real_father_even_if_dead = { trait = quick }
			real_father_even_if_dead = { trait = slow }
			real_father_even_if_dead = { trait = imbecile }
		}
	}

	immediate = {
		# Genius
		random = {
			chance = 10
			modifier = { # Both parents are Geniuses
				factor = 2
				mother_even_if_dead = { trait = genius }
				real_father_even_if_dead = { trait = genius }
			}
			modifier = { # One parent is just quick
				factor = 1.5
				OR = {
					mother_even_if_dead = { trait = quick }
					real_father_even_if_dead = { trait = quick }
				}
				OR = {
					mother_even_if_dead = { trait = genius }
					real_father_even_if_dead = { trait = genius }
				}
			}
			modifier = { # one parent is slow or an imbecile
				factor = 0.5
				OR = {
					mother_even_if_dead = { trait = slow }
					mother_even_if_dead = { trait = imbecile }
					real_father_even_if_dead = { trait = slow }
					real_father_even_if_dead = { trait = imbecile }
				}
			}
			modifier = { # Both parents are quick
				factor = 0.1
				mother_even_if_dead = { trait = quick }
				real_father_even_if_dead = { trait = quick }
			}
			modifier = { # Neither parent is quick or a genius
				factor = 0
				NOR = {
					mother_even_if_dead = { trait = genius }
					mother_even_if_dead = { trait = quick }
					real_father_even_if_dead = { trait = genius }
					real_father_even_if_dead = { trait = quick }
				}
			}
			modifier = { # One parent is quick, the other is average (or less)
				factor = 0
				OR = {
					AND = {
						mother_even_if_dead = { trait = quick }
						NOT = { real_father_even_if_dead = { trait = quick } }
						NOT = { real_father_even_if_dead = { trait = genius } }
					}
					AND = {
						real_father_even_if_dead = { trait = quick }
						NOT = { real_father_even_if_dead = { trait = quick } }
						NOT = { real_father_even_if_dead = { trait = genius } }
					}
				}
			}
			modifier = { # Already has an intelligence trait
				factor = 0
				OR = {
					trait = genius
					trait = quick
					trait = slow
					trait = imbecile
				}
			}
			add_trait = genius
		}

		# Quick
		random = {
			chance = 10
			modifier = { # Both parents are geniuses
				factor = 3
				mother_even_if_dead = { trait = genius }
				real_father_even_if_dead = { trait = genius }
			}
			modifier = { # Both parents are quick
				factor = 2
				mother_even_if_dead = { trait = quick }
				real_father_even_if_dead = { trait = quick }
			}
			modifier = { # One parent is a genius
				factor = 2
				OR = {
					mother_even_if_dead = { trait = genius }
					real_father_even_if_dead = { trait = genius }
				}
				OR = {
					mother_even_if_dead = { trait = quick }
					real_father_even_if_dead = { trait = quick }
				}
			}
			modifier = { #One parent is a genius, the other is average
				factor = 1.5
				OR = {
					mother_even_if_dead = { trait = genius }
					real_father_even_if_dead = { trait = genius }
				}
				NOR = {
					mother_even_if_dead = { trait = genius }
					mother_even_if_dead = { trait = quick }
					real_father_even_if_dead = { trait = genius }
					real_father_even_if_dead = { trait = quick }
				}
			}
			modifier = { # one parent is slow or an imbecile
				factor = 0.5
				OR = {
					mother_even_if_dead = { trait = slow }
					mother_even_if_dead = { trait = imbecile }
					real_father_even_if_dead = { trait = slow }
					real_father_even_if_dead = { trait = imbecile }
				}
			}
			modifier = { # Neither parent is either quick or a genius
				factor = 0
				NOR = {
					mother_even_if_dead = { trait = genius }
					mother_even_if_dead = { trait = quick }
					real_father_even_if_dead = { trait = genius }
					real_father_even_if_dead = { trait = quick }
				}
			}
			modifier = { # Already has an intelligence trait
				factor = 0
				OR = {
					trait = genius
					trait = quick
					trait = slow
					trait = imbecile
				}
			}
			add_trait = quick
		}

		# Imbecile
		random = {
			chance = 10
			modifier = { # Both parents are imbeciles
				factor = 2
				mother_even_if_dead = { trait = imbecile }
				real_father_even_if_dead = { trait = imbecile }
			}
			modifier = { # One parent is just slow
				factor = 1.5
				OR = {
					mother_even_if_dead = { trait = slow }
					real_father_even_if_dead = { trait = slow }
				}
				OR = {
					mother_even_if_dead = { trait = imbecile }
					real_father_even_if_dead = { trait = imbecile }
				}
			}
			modifier = { # One parent is quick or a genius
				factor = 0.5
				OR = {
					mother_even_if_dead = { trait = genius }
					mother_even_if_dead = { trait = quick }
					real_father_even_if_dead = { trait = genius }
					real_father_even_if_dead = { trait = quick }
				}
			}
			modifier = { # Both parents are slow
				factor = 0.1
				mother_even_if_dead = { trait = slow }
				real_father_even_if_dead = { trait = slow }
			}
			modifier = { # Neither parent is slow or an imbecile
				factor = 0
				NOR = {
					mother_even_if_dead = { trait = slow }
					mother_even_if_dead = { trait = imbecile }
					real_father_even_if_dead = { trait = slow }
					real_father_even_if_dead = { trait = imbecile }
				}
			}
			modifier = { # One parent is slow, the other is average (or more)
				factor = 0
				OR = {
					AND = {
						mother_even_if_dead = { trait = slow }
						NOT = { real_father_even_if_dead = { trait = slow } }
						NOT = { real_father_even_if_dead = { trait = imbecile } }
					}
					AND = {
						real_father_even_if_dead = { trait = slow }
						NOT = { mother_even_if_dead = { trait = slow } }
						NOT = { mother_even_if_dead = { trait = imbecile } }
					}
				}
			}
			modifier = { # Already has an intelligence trait
				factor = 0
				OR = {
					trait = genius
					trait = quick
					trait = slow
					trait = imbecile
				}
			}
			add_trait = imbecile
		}

		# Slow
		random = {
			chance = 10
			modifier = { # both parents are imbeciles
				factor = 3
				mother_even_if_dead = { trait = imbecile }
				real_father_even_if_dead = { trait = imbecile }
			}
			modifier = { # Both parents are slow
				factor = 2
				mother_even_if_dead = { trait = slow }
				real_father_even_if_dead = { trait = slow }
			}
			modifier = { # One parent is an imbecile
				factor = 2
				OR = {
					mother_even_if_dead = { trait = imbecile }
					real_father_even_if_dead = { trait = imbecile }
				}
				OR = {
					mother_even_if_dead = { trait = slow }
					real_father_even_if_dead = { trait = slow }
				}
			}
			modifier = { # One parent is an imbecile, the other is average
				factor = 1.5
				OR = {
					mother_even_if_dead = { trait = imbecile }
					real_father_even_if_dead = { trait = imbecile }
				}
				NOR = {
					mother_even_if_dead = { trait = slow }
					mother_even_if_dead = { trait = imbecile }
					real_father_even_if_dead = { trait = slow }
					real_father_even_if_dead = { trait = imbecile }
				}
			}
			modifier = { # One parent is quick or a genius
				factor = 0.5
				OR = {
					mother_even_if_dead = { trait = genius }
					mother_even_if_dead = { trait = quick }
					real_father_even_if_dead = { trait = genius }
					real_father_even_if_dead = { trait = quick }
				}
			}
			modifier = { # Neither parent is slow or an imbecile
				factor = 0
				NOR = {
					mother_even_if_dead = { trait = slow }
					mother_even_if_dead = { trait = imbecile }
					real_father_even_if_dead = { trait = slow }
					real_father_even_if_dead = { trait = imbecile }
				}
			}
			modifier = { # Already has an intelligence trait
				factor = 0
				OR = {
					trait = genius
					trait = quick
					trait = slow
					trait = imbecile
				}
			}
			add_trait = slow
		}
	}
}

# 003: Strength Check
character_event = {
	id = geneticPlus.003

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		NOR = {
			trait = strong
			trait = weak
		}
		OR = {
			mother_even_if_dead = { trait = strong }
			mother_even_if_dead = { trait = weak }
			real_father_even_if_dead = { trait = strong }
			real_father_even_if_dead = { trait = weak }
		}
	}

	immediate = {
		# Strong
		random = {
			chance = 33
			modifier = { # Both parents strong
				factor = 2
				mother_even_if_dead = { trait = strong }
				real_father_even_if_dead = { trait = strong }
			}
			modifier = { # One parent weak
				factor = 0.5
				OR = {
					mother_even_if_dead = { trait = weak }
					real_father_even_if_dead = { trait = weak }
				}
			}
			modifier = { # Neither parent strong
				factor = 0
				NOR = {
					mother_even_if_dead = { trait = strong }
					real_father_even_if_dead = { trait = strong }
				}
			}
			modifier = { # Already has strength trait
				factor = 0
				OR = {
					trait = strong
					trait = weak
				}
			}
			add_trait = strong
		}

		# Weak
		random = {
			chance = 33
			modifier = { # Both parents weak
				factor = 2
				mother_even_if_dead = { trait = weak }
				real_father_even_if_dead = { trait = weak }
			}
			modifier = { # One parent strong
				factor = 0.5
				OR = {
					mother_even_if_dead = { trait = strong }
					real_father_even_if_dead = { trait = strong }
				}
			}
			modifier = { # Neither parent weak
				factor = 0
				NOR = {
					mother_even_if_dead = { trait = weak }
					real_father_even_if_dead = { trait = weak }
				}
			}
			modifier = { # Already has strength trait
				factor = 0
				OR = {
					trait = strong
					trait = weak
				}
			}
			add_trait = weak
		}
	}
}

# 004: Appearance Check
character_event = {
	id = geneticPlus.004

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		NOR = {
			trait = fair
			trait = ugly
		}
		OR = {
			mother_even_if_dead = { trait = fair }
			mother_even_if_dead = { trait = ugly }
			real_father_even_if_dead = { trait = fair }
			real_father_even_if_dead = { trait = ugly }
		}
	}

	immediate = {
		# Fair
		random = {
			chance = 33
			modifier = { # Both parents are fair
				factor = 2
				mother_even_if_dead = { trait = fair }
				real_father_even_if_dead = { trait = fair }
			}
			modifier = { # One parent ugly
				factor = 0.5
				OR = {
					mother_even_if_dead = { trait = ugly }
					real_father_even_if_dead = { trait = ugly }
				}
			}
			modifier = { # Neither parent fair
				factor = 0
				NOR = {
					mother_even_if_dead = { trait = fair }
					real_father_even_if_dead = { trait = fair }
				}
			}
			modifier = { # Already has appearance trait
				factor = 0
				OR = {
					trait = fair
					trait = ugly
				}
			}
			add_trait = fair
		}

		# Ugly
		random = {
			chance = 33
			modifier = { # Both parents are ugly
				factor = 2
				mother_even_if_dead = { trait = ugly }
				real_father_even_if_dead = { trait = ugly }
			}
			modifier = { # One parent fair
				factor = 0.5
				OR = {
					mother_even_if_dead = { trait = fair }
					real_father_even_if_dead = { trait = fair }
				}
			}
			modifier = { # Neither parent ugly
				factor = 0
				NOR = {
					mother_even_if_dead = { trait = ugly }
					real_father_even_if_dead = { trait = ugly }
				}
			}
			modifier = { # Already has appearance trait
				factor = 0
				OR = {
					trait = fair
					trait = ugly
				}
			}
			add_trait = ugly
		}
	}
}

# 005: Fertility Check
character_event = {
	id = geneticPlus.005

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		NOR = {
			immortal = yes
			trait = fertile
			trait = infertile
			has_character_flag = is_barren
		}
	}

	immediate = {
		# Barren
		random = {
			chance = 3
			modifier = { # Increased chance if inbred
				factor = 10
				trait = inbred
			}
			modifier = { # Increased chance if weak
				factor = 5
				is_weak_trigger = yes
			}
			modifier = { # Reduced chance if strong
				factor = 0.5
				is_strong_trigger = yes
			}
			modifier = { # Not if already has a fertility trait
				factor = 0
				OR = {
					trait = fertile
					trait = infertile
					has_character_flag = is_barren
				}
			}
			add_trait = infertile
			set_character_flag = is_barren
		}
		# Infertile
		random = {
			chance = 12
			modifier = { # Increased chance if inbred
				factor = 3
				trait = inbred
			}
			modifier = { # Increased chance if weak
				factor = 2
				is_weak_trigger = yes
			}
			modifier = { # Reduced chance if strong
				factor = 0.5
				is_strong_trigger = yes
			}
			modifier = { # Not if already has a fertility trait
				factor = 0
				OR = {
					trait = fertile
					trait = infertile
					has_character_flag = is_barren
				}
			}
			add_trait = infertile
		}
	}
}

# 006: Height Check
character_event = {
	id = geneticPlus.006

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		NOR = {
			trait = giant
			trait = tall
			trait = dwarf
		}
		OR = {
			mother_even_if_dead = { trait = giant }
			mother_even_if_dead = { trait = tall }
			mother_even_if_dead = { trait = dwarf }
			real_father_even_if_dead = { trait = giant }
			real_father_even_if_dead = { trait = tall }
			real_father_even_if_dead = { trait = dwarf }
		}
	}

	immediate = {
		# Giant
		random = {
			chance = 33
			modifier = { # Increased chance if both parents giants
				factor = 2
				mother_even_if_dead = { trait = giant }
				real_father_even_if_dead = { trait = giant }
			}
			modifier = { # Not if neither parent giant
				factor = 0
				NOR = {
					mother_even_if_dead = { trait = giant }
					real_father_even_if_dead = { trait = giant }
				}
			}
			modifier = { # Not if already has a height trait
				factor = 0
				OR = {
					trait = giant
					trait = tall
					trait = dwarf
				}
			}
			add_trait = giant
		}

		# Tall
		random = {
			chance = 33
			modifier = { # Increased chance if both parents tall
				factor = 2
				mother_even_if_dead = { trait = tall }
				real_father_even_if_dead = { trait = tall }
			}
			modifier = { # Increased chance if one parent is a giant and the other is just tall
				factor = 2
				OR = {
					mother_even_if_dead = { trait = giant }
					real_father_even_if_dead = { trait = giant }
				}
				OR = {
					mother_even_if_dead = { trait = tall }
					real_father_even_if_dead = { trait = tall }
				}
			}
			modifier = { # Not if neither parent tall or giant
				factor = 0
				NOR = {
					mother_even_if_dead = { trait = giant }
					mother_even_if_dead = { trait = tall }
					real_father_even_if_dead = { trait = giant }
					real_father_even_if_dead = { trait = tall }
				}
			}
			modifier = { # Not if already has a height trait
				factor = 0
				OR = {
					trait = giant
					trait = tall
					trait = dwarf
				}
			}
			add_trait = tall
		}

		# Dwarf
		random = {
			chance = 33
			modifier = { # Increased chance if both parents dwarves
				factor = 2
				mother_even_if_dead = { trait = dwarf }
				real_father_even_if_dead = { trait = dwarf }
			}
			modifier = { # Not if neither parent dwarf
				factor = 0
				NOR = {
					mother_even_if_dead = { trait = dwarf }
					real_father_even_if_dead = { trait = dwarf }
				}
			}
			modifier = { # Not if already has a height trait
				factor = 0
				OR = {
					trait = giant
					trait = tall
					trait = dwarf
				}
			}
			add_trait = dwarf
		}
	}
}

# 007: Masking Modifiers
character_event = {
	id = geneticPlus.007

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_game_rule = {
			name = hidden_character_traits_rule
			value = yes
		}
		age <= 6
	}

	immediate = {
		if = {
			limit = { trait = genius }
			add_character_modifier = {
				name = hidden_genius
				duration = 5840 #16 years
			}
		}
		if = {
			limit = { trait = quick }
			add_character_modifier = {
				name = hidden_quick
				duration = 5840 #16 years
			}
		}
		if = {
			limit = { trait = slow }
			add_character_modifier = {
				name = hidden_slow
				duration = 5840 #16 years
			}
		}
		if = {
			limit = { trait = imbecile }
			add_character_modifier = {
				name = hidden_imbecile
				duration = 5840 #16 years
			}
		}
		if = {
			limit = { trait = strong }
			add_character_modifier = {
				name = hidden_strong
				duration = 5840 #16 years
			}
		}
		if = {
			limit = { trait = weak }
			add_character_modifier = {
				name = hidden_weak
				duration = 5840 #16 years
			}
		}
		if = {
			limit = { trait = fair }
			add_character_modifier = {
				name = hidden_fair
				duration = 5840 #16 years
			}
		}
		if = {
			limit = { trait = ugly }
			add_character_modifier = {
				name = hidden_ugly
				duration = 5840 #16 years
			}
		}
		if = {
			limit = { trait = tall }
			add_character_modifier = {
				name = hidden_tall
				duration = 5840 #16 years
			}
		}
		if = {
			limit = { trait = dwarf }
			add_character_modifier = {
				name = hidden_dwarf
				duration = 5840 #16 years
			}
		}
	}
}

# 008: Divine Blood Check
character_event = {
	id = geneticPlus.008

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		NOR = {
			trait = divine_blood
			trait = bastard
			trait = legit_bastard
		}
		OR = {
			mother_even_if_dead = { trait = divine_blood }
			real_father_even_if_dead = { trait = divine_blood }
			father_even_if_dead = { trait = divine_blood }
		}
	}

	immediate = {
		add_trait = divine_blood
	}
}

# 009: Yehudi Check
character_event = {
	id = geneticPlus.009

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			AND = {
				religion_group = jewish_group
				has_character_flag = start_of_game_character
			}
			mother_even_if_dead = { trait = yehudi }
		}
	}

	immediate = {
		add_trait = yehudi
	}
}

#######################################
#
# 010 - 019: Setup Chain
#
#######################################
#
# INDEX
#
# 010: Remove Masking Modifiers
#
#######################################

# 010: Remove Masking Modifiers
character_event = {
	id = geneticPlus.010

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_adult = yes
	}

	immediate = {
		if = {
			limit = { has_character_modifier = hidden_genius }
			remove_character_modifier = hidden_genius
		}
		if = {
			limit = { has_character_modifier = hidden_quick }
			remove_character_modifier = hidden_quick
		}
		if = {
			limit = { has_character_modifier = hidden_slow }
			remove_character_modifier = hidden_slow
		}
		if = {
			limit = { has_character_modifier = hidden_imbecile }
			remove_character_modifier = hidden_imbecile
		}
		if = {
			limit = { has_character_modifier = hidden_strong }
			remove_character_modifier = hidden_strong
		}
		if = {
			limit = { has_character_modifier = hidden_weak }
			remove_character_modifier = hidden_weak
		}
		if = {
			limit = { has_character_modifier = hidden_fair }
			remove_character_modifier = hidden_fair
		}
		if = {
			limit = { has_character_modifier = hidden_ugly }
			remove_character_modifier = hidden_ugly
		}
		if = {
			limit = { has_character_modifier = hidden_tall }
			remove_character_modifier = hidden_tall
		}
		if = {
			limit = { has_character_modifier = hidden_dwarf }
			remove_character_modifier = hidden_dwarf
		}
	}
}
