namespace = realmPlus

#######################################
#
# CK2Plus Realm Events
#
#######################################
#
# CATALOG
#
# 001 - 099: High Priority Events
# 100 - 199: Imperial Events
# 200 - 299: Kingdom Events
# 300 - 399: Ducal Events
# 400 - 499: County Events
# 500 - 500: Patrician (Baron) Events
# 600 - 699: General Realm Events
#
#######################################



#######################################
#
# 001 - 099: High Priority Events
#
#######################################
#
# INDEX
#
# 002: Mark exceptions to Crown Authority destruction rule
# 003: Crown setup
# 004: Imperial Decadence setup
#
#######################################

# 002: Mark exceptions to Crown Authority destruction rule
character_event = {
	id = realmPlus.002

	is_triggered_only = yes
	hide_window = yes

	only_rulers = yes

	trigger = {
		is_save_game = no
		higher_tier_than = DUKE
		any_demesne_title = {
			has_law = crown_authority_0
			NOT = { has_title_flag = do_not_destroy }
		}
	}

	immediate = {
		any_demesne_title = {
			limit = { has_law = crown_authority_0 }
			set_title_flag = do_not_destroy
		}
	}
}

# 003: Crown setup
# NOTE: This likely needs reworked
character_event = {
	id = realmPlus.003

	hide_window = yes
	is_triggered_only = yes

	trigger = {
		is_save_game = no
		has_landed_title = d_miaphysite
	}

	immediate = {
		# give crowned trait to all existing kings and emperors
		any_independent_ruler = {
			limit = {
				is_offmap_trigger = no
				is_playable = yes
				higher_real_tier_than = DUKE
				is_feudal = yes
				has_horde_culture = no
				is_nomadic = no
				independent = yes
				primary_title = { is_vice_royalty = no }
				is_crowned = no
			}
			if = {
				limit = { is_adult = yes }
				add_trait = crowned
			}
			else = {
				add_trait = uncrowned
			}
		}
	}
}

# 004: Imperial Decadence setup
# NOTE: Needs reworked
character_event = {
	id = realmPlus.004

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		is_save_game = no
		real_tier = EMPEROR
		is_offmap_trigger = no
		is_nomadic = no
		uses_decadence = no
	}

	immediate = {
		character_event = { id = Plus.1852 days = 1 }
	}
}

#######################################
#
# 100 - 199: Imperial Events
#
#######################################
#
# INDEX
#
# 100: Imperial Destruction
# 101: Emperor picks between two held empires
# 102: Copy imperial laws to held kingdoms
#
#######################################

# 100: Imperial Destruction
character_event = {
	id = realmPlus.100
	picture = "GFX_evt_council"
	desc = EVTDESC_Plus_303

	is_triggered_only = yes

	only_independent = yes
	only_playable = yes
	war = no

	trigger = {
		real_tier = EMPEROR
		is_nomadic = no
		NOR = {
			num_of_emperor_titles >= 2
			primary_title = { is_landless_type_title = yes }
			realm_size >= 100
			num_of_count_titles_in_realm >= 35
			is_offmap_trigger = yes
		}
	}

	weight_multiplier = { days = 1 }

	immediate = {
		# Emergency Kingdom for dumb emperors (usually AI)
		if = {
			limit = {
				num_of_king_titles == 0
				capital_scope = { kingdom = { has_holder = no } }
			}
			capital_scope = { kingdom = { gain_title = ROOT } }
		}
		else = {
			log = "Unable to create emergency kingdom when shattering empire. Ruler rank demoted."
		}
		# You are the weakest link, goodbye.
		primary_title = { destroy_landed_title = THIS }
	}

	option = {
		name = "EVTOPTA_Plus_303"
		prestige = -1000
	}
}

# 101: Emperor picks between two held empires
character_event = {
	id = realmPlus.101
	is_triggered_only = yes

	picture = GFX_evt_coronation

	only_independent = yes
	only_playable = yes

	trigger = {
		is_nomadic = no
		real_tier = EMPEROR
		num_of_emperor_titles >= 2
	}

	weight_multiplier = { days = 1 }

	immediate = {
		primary_title = { save_event_target_as = current_title }
		any_demesne_title = {
			limit = {
				tier = EMPEROR
				NOT = { title = event_target:current_title }
				count = 1
			}
			save_event_target_as = new_title
		}
	}

	desc = EVTDESC_Plus_1854

	option = {
		name = EVTOPTA_Plus_1854 # I will assume the new title

		hidden_effect = {
			event_target:new_title = { make_primary_title = yes }
			event_target:current_title = {
				any_vassal = { set_defacto_liege = ROOT }
			}

			clr_character_flag = must_grant_empire_flag
		}

		event_target:current_title = { unsafe_destroy_landed_title = THIS }

		ai_chance = {
			factor = 20

			trigger = {
				NOR = {
					event_target:current_title = { culture = ROOT }
					AND = {
						event_target:current_title = { is_titular = no }
						event_target:new_title = { is_titular = yes }
					}
				}
			}

			modifier = {
				factor = 0.1
				event_target:current_title = {
					capital_scope = { culture = ROOT }
				}
			}
		}
	}
	option = {
		name = EVTOPTB_Plus_1854 # I will keep my current title

		hidden_tooltip = {
			event_target:new_title = {
				any_vassal = { set_defacto_liege = ROOT }
			}

			clr_character_flag = must_grant_empire_flag
		}

		event_target:new_title = { unsafe_destroy_landed_title = THIS }

		ai_chance = {
			factor = 50

			trigger = {
				NOR = {
					event_target:new_title = { culture = ROOT }
					AND = {
						event_target:current_title = { is_titular = yes }
						event_target:new_title = { is_titular = no }
					}
				}
			}

			modifier = {
				factor = 0.1
				event_target:new_title = {
					capital_scope = { culture = ROOT }
				}
			}
		}
	}
	option = {
		name = EVTOPTC_Plus_1854 # I will give the second title to someone else

		trigger = {
			is_tributary = no
			NOT = { has_character_flag = must_grant_empire_flag }
			event_target:new_title = { is_titular = no }
			event_target:current_title = { is_titular = no }
		}

		custom_tooltip = {
			text = GRANT_EMPIRE_WITHIN_30_DAYS
			hidden_tooltip = {
				set_character_flag = must_grant_empire_flag
				character_event = {
					id = realmPlus.101
					days = 30
				}
			}
		}

		ai_chance = {
			factor = 0
		}
	}

	after = {
		clear_event_target = current_title
		clear_event_target = new_title
		# In case the ruler somehow had more than two empires
		if = {
			limit = {
				ROOT = {
					num_of_emperor_titles >= 2
					NOT = { has_character_flag = must_grant_empire_flag }
				}
			}
			character_event = {
				id = realm_Plus.101
				days = 1
			}
		}
	}
}

# 102: Copy imperial laws to held kingdoms
character_event = {
	id = realmPlus.102
	is_triggered_only = yes
	hide_window = yes

	only_independent = yes
	only_playable = yes

	trigger = {
		real_tier = EMPEROR
		any_demesne_title = {
			tier = KING
			holder = ROOT # Safety check because I don't trust paradox
		}
	}

	weight_multiplier = { days = 1 }

	immediate = {
		primary_title = { save_event_target_as = primaryTitle }
		any_demesne_title = {
			limit = {
				tier = KING
				holder = ROOT
			}
			copy_title_laws = event_target:primaryTitle
		}
	}

	after = {
		clear_event_target = primaryTitle
	}
}


#######################################
#
# 600 - 699: General Realm Events
#
#######################################
#
# INDEX
#
# 600: AI Abandon Baronies orphaned in another realm
#
#######################################

# 600: AI Abandon Baronies orphaned in another realm
character_event = {
	id = realmPlus.600
	is_triggered_only = yes
	hide_window = yes

	ai = yes
	is_patrician = no
	only_rulers = yes
	war = no

	trigger = {
		controls_religion = no
		mercenary = no
		is_ruler = yes
		any_demesne_title = {
			tier = baron
			dejure_liege_title = {
				holder_scope = {
					NOT = { same_realm = ROOT }
				}
			}
		}
		NOR = {
			any_liege = { ai = no}
			government = order_government
			rightful_religious_head = ROOT
		}
	}

	weight_multiplier = { days = 1 }

	immediate = {
		any_demesne_title = {
			limit = {
				tier = baron
				dejure_liege_title = {
					holder_scope = {
						NOT = { same_realm = ROOT }
					}
				}
			}
			save_event_target_as = orphaned_barony
			dejure_liege_title = {
				holder_scope = {
					gain_title = event_target:orphaned_barony
				}
			}
			clear_event_target = orphaned_barony
		}
	}
}